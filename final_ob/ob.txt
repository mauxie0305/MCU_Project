// Define the microcontroller we are using
#ifndef __AVR_ATmega328P__
#define __AVR_ATmega328P__
#endif

#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
#include <stdlib.h>
uint16_t ADCRead(const int);

int main(void)
{
	CLKPR=(1<<CLKPCE);
	CLKPR=0b00000000; //time division 1
	DDRC = 0;
	DDRB=0xFF;
	DDRD=0xFF;
	OCR0A=210;
	OCR0B=0;
	TCCR0A=0b10100011; // fast PWM, non-inverted
	TCCR0B=0b00000010; // timer prescaler

	OCR2A=210;
	OCR2B=0;
	TCCR2A=0b10100011; // fast PWM, non-inverted
	TCCR2B=0b10100010;

	ADCSRA |= (1<<ADEN);
	int setspeedR=160,setspeedL=155,lightTurn=40,sharpTurn=125;	//20 115 best for now

	while (1)
	{

		float R=0,L=0,M=0;
		for(int i=0;i<3;i++)
		{
			M+=(float)ADCRead(2);
			R+=(float)ADCRead(0);
			L+=(float)ADCRead(1);
		}
		M=M/3;
		R=R/3;
		L=L/3;
		//if (true) //straight
		if(M>=530)
		{
			OCR0A=setspeedR;
			OCR2A=setspeedL;
		}
		/*else if(R>500&&M>500) //車身稍微偏左 些微修正
		{
		OCR0A=setspeedR-lightTurn;
		OCR2A=setspeedL+lightTurn;
		}*/
		else if(R>500) //車身大幅偏左 強力修正
		{
			OCR0A=setspeedR - sharpTurn;
			OCR2A=setspeedL - lightTurn + 20;
		}
		/*else if(L>530&&M>500) //車身稍微偏右 些微修正
		{
		OCR0A=setspeedR+lightTurn;
		OCR2A=setspeedL-lightTurn;
		}*/
		else if(L>530) //車身大幅偏右 強力修正
		{
			OCR0A=setspeedR - lightTurn;
			OCR2A=setspeedL - sharpTurn;
		}

	}
}

uint16_t ADCRead(const int channel)
{
	ADMUX = 0b01000000;
	ADMUX |= channel;
	ADCSRA |= (1<<ADSC) | (1<<ADIF);
	while ( (ADCSRA & (1<<ADIF)) == 0);
	ADCSRA &= ~(1<<ADSC);
	return ADC;
}